<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">


	<beans:bean id="expressionHandler" class="com.hyunhye.security.CustomSecurityExpressionHandler" ></beans:bean>

	<http auto-config='true' use-expressions="true">
	
		<expression-handler ref="expressionHandler"/>
		
		<!-- 수정/삭제  권한 -->
		<intercept-url pattern="/board/modify**" access="hasBoardRole()" /> 
		<intercept-url pattern="/board/delete**" access="hasBoardRole()" /> 
		<intercept-url pattern="/comment/modify**" access="hasAnswerRole()" />
		<intercept-url pattern="/comment/delete**" access="hasAnswerRole()" /> 
		
		<!-- 모든 사람 -->
		<intercept-url pattern="/user/**" access="permitAll" /> 
		<intercept-url pattern="/resources/**" access="permitAll" /> 
		<intercept-url pattern="/board" access="permitAll" />
		
		<!-- 회원만  -->
		<intercept-url pattern="/board/**" access="isAuthenticated()" /> 
		<intercept-url pattern="/contact/**" access="isAuthenticated()" /> 
		
		<!-- 관리자 권한 -->
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		

		<!-- 사용자이름과 비밀번호를 가지고있는 폼기반 인증방법 -->
		<form-login 
			username-parameter="userId" 
			password-parameter="userPassword"
			login-page="/user/loginPage" 
			default-target-url="/board"
			authentication-failure-url="/user/loginPage?error"
			login-processing-url="/loginProcess" />

		<!-- 중복 로그인 설정 -->
		<session-management>
			<concurrency-control 
				max-sessions="1"
				expired-url="/user/login/duplicate" />
		</session-management>

		<!-- 로그아웃되면 세션 초기화 -->
		<logout 
			delete-cookies="true" 
			invalidate-session="true"
			logout-url="/user/logout" 
			logout-success-url="/user/loginPage?logout" />

		<access-denied-handler ref="userDeniedHandler"/>
		
		<!-- 해킹을 막는다. -->
		<csrf />
	</http>
	
	<beans:bean id="userDeniedHandler" class="com.hyunhye.security.UserDeniedHandler"></beans:bean>
	<beans:bean id="userLoginSuccessHandler" class="com.hyunhye.security.UserLoginSuccessHandler"></beans:bean>
	<beans:bean id="userLoginFailureHandler" class="com.hyunhye.security.UserLoginFailureHandler"></beans:bean>
 
	<authentication-manager  erase-credentials="false">
		<authentication-provider user-service-ref="userServiceManager">
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="userServiceManager" class="com.hyunhye.security.UserAuthenticationService">
	</beans:bean> 

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</beans:bean>

</beans:beans>
